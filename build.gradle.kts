/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin on the JVM.
    id("org.jetbrains.kotlin.jvm").version("1.3.21")

    // formatKotlin: format Kotlin source code according to ktlint rules or warn when auto-format not possible.
    // lintKotlin: report Kotlin lint errors and by default fail the build.
    id("org.jmailen.kotlinter").version("1.25.2")

    // Apply the application plugin to add support for building a CLI application.
    application
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    // HTTP client
    implementation("com.github.kittinunf.fuel:fuel:2.0.1")
    implementation("com.github.kittinunf.fuel:fuel-gson:2.0.1")
    // Web framework
    implementation("com.sparkjava:spark-kotlin:1.0.0-alpha")
    // Configuration
    implementation("com.natpryce:konfig:1.6.10.0")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")
    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
}

application {
    // Define the main class for the application.
    mainClassName = "reenit.accesslink.ClientKt"
}

tasks {
    task("authorize", JavaExec::class) {
        main = "reenit.AppKt"
        classpath = sourceSets["main"].runtimeClasspath
    }
}
